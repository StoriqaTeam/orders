clone:
  git:
    image: plugins/git
    pull: true
    recursive: true

pipeline:
  restore-cache:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ aws_access_key_id, aws_secret_access_key ]
    mount: deps
    restore: true
    when:
      event:
      - pull_request
      - push
      - tag

###
# Test PR
###

  test:
    image: rust:1.31-stretch
    environment:
    - RUN_MODE=k8s
    - DATABASE_HOST=db-postgresql
    - DATABASE_URL=postgresql://orders:orders@db-postgresql/orders
    - RUST_BACKTRACE=1
    - CARGO_HOME=deps
    - PGPASSWORD=a1a1a1a1
    commands:
    - rustup component add rustfmt-preview
    - cargo fmt -- --check
    - apt-get update && apt-get install -y ca-certificates wget gnupg2
    - update-ca-certificates
    - wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
    - apt-get update && apt-get install -y libpq5 postgresql-client-10
    - psql -U postgres -h db-postgresql -c "CREATE ROLE orders WITH PASSWORD 'orders' LOGIN REPLICATION" -c "CREATE DATABASE orders OWNER orders"
    - psql -U postgres -h db-postgresql -d orders -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"";
    - mkdir -p /usr/local/cargo/bin || true
    - wget -q https://s3.eu-central-1.amazonaws.com/dumpster.stq/diesel -O /usr/local/cargo/bin/diesel
    - chmod +x /usr/local/cargo/bin/diesel
    - diesel migration run
    - cargo test --locked
    when:
      event: pull_request

###
# Building
###

# Regular branches
  build:
    image: rust:1.31-stretch
    environment:
    - CARGO_HOME=deps
    - RUSTFLAGS=-C opt-level=1 -C debuginfo=0
    commands:
    - cargo build --locked
    when:
      event: push
      branch: master
# Releases
  build:
    image: rust:1.31-stretch
    environment:
    - CARGO_HOME=deps
    commands:
    - cargo build --release --locked
    when:
      event:
      - tag

###
# Packaging
###

# Regular branches
  package:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders
    dockerfile: Dockerfile.orders
    tags:
    - ${DRONE_BRANCH//\//_}
    - ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - docker_username
    - docker_password
    when:
      event: push
      branch: master
  package_delivered:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders-delivered
    dockerfile: Dockerfile.pollers
    build_args:
    - binary=delivered_orders
    tags:
    - ${DRONE_BRANCH//\//_}
    - ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - docker_username
    - docker_password
    when:
      event: push
      branch: master
  package_report:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders-report
    dockerfile: Dockerfile.pollers
    build_args:
    - binary=report_orders
    tags:
    - ${DRONE_BRANCH//\//_}
    - ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - docker_username
    - docker_password
    when:
      event: push
      branch: master
  package_sent:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders-sent
    dockerfile: Dockerfile.pollers
    build_args:
    - binary=sent_orders
    tags:
    - ${DRONE_BRANCH//\//_}
    - ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - docker_username
    - docker_password
    when:
      event: push
      branch: master
# Releases
  package:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders
    dockerfile: Dockerfile.orders
    build_args:
    - env=release
    tags:
    - '${DRONE_TAG}'
    - latest
    secrets:
    - docker_username
    - docker_password
    when:
      event: tag
  package_delivered:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders-delivered
    dockerfile: Dockerfile.pollers
    build_args:
    - binary=delivered_orders
    - env=release
    tags:
    - '${DRONE_TAG}'
    - latest
    secrets:
    - docker_username
    - docker_password
    when:
      event: tag
  package_report:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders-report
    dockerfile: Dockerfile.pollers
    build_args:
    - binary=report_orders
    - env=release
    tags:
    - '${DRONE_TAG}'
    - latest
    secrets:
    - docker_username
    - docker_password
    when:
      event: tag
  package_sent:
    group: package
    image: plugins/docker
    repo: storiqateam/stq-orders-sent
    dockerfile: Dockerfile.pollers
    build_args:
    - binary=sent_orders
    - env=release
    tags:
    - '${DRONE_TAG}'
    - latest
    secrets:
    - docker_username
    - docker_password
    when:
      event: tag

###
# Deployments
###

# nightly
  deploy2nightly_orders:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders
    img_names: storiqateam/stq-orders
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    img_cnts: orders
    secrets:
    - source: k8s_nightly_ca
      target: k8s_ca
    - source: k8s_nightly_user
      target: k8s_user
    - source: k8s_nightly_token
      target: k8s_token
    - source: k8s_nightly_addr
      target: k8s_addr
    when:
      branch: master
      event: push
  deploy2nightly_delivered:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    object: orders-delivered
    kind: deployment
    img_names: storiqateam/stq-orders-delivered
    img_cnts: orders-delivered
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - source: k8s_nightly_ca
      target: k8s_ca
    - source: k8s_nightly_user
      target: k8s_user
    - source: k8s_nightly_token
      target: k8s_token
    - source: k8s_nightly_addr
      target: k8s_addr
    when:
      branch: master
      event: push
  deploy2nightly_report:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    object: orders-report
    kind: deployment
    img_names: storiqateam/stq-orders-report
    img_cnts: orders-report
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - source: k8s_nightly_ca
      target: k8s_ca
    - source: k8s_nightly_user
      target: k8s_user
    - source: k8s_nightly_token
      target: k8s_token
    - source: k8s_nightly_addr
      target: k8s_addr
    when:
      branch: master
      event: push
  deploy2nightly_sent:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    object: orders-sent
    kind: deployment
    img_names: storiqateam/stq-orders-sent
    img_cnts: orders-sent
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_BUILD_NUMBER}
    secrets:
    - source: k8s_nightly_ca
      target: k8s_ca
    - source: k8s_nightly_user
      target: k8s_user
    - source: k8s_nightly_token
      target: k8s_token
    - source: k8s_nightly_addr
      target: k8s_addr
    when:
      branch: master
      event: push
# stable
  deploy2stable_orders:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders
    img_names: storiqateam/stq-orders
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_PARENT_BUILD_NUMBER}
    img_cnts: orders
    secrets:
    - source: k8s_stable_ca
      target: k8s_ca
    - source: k8s_stable_user
      target: k8s_user
    - source: k8s_stable_token
      target: k8s_token
    - source: k8s_stable_addr
      target: k8s_addr
    when:
      event: deployment
      environment: stable
  deploy2stable_delivered:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-delivered
    img_names: storiqateam/stq-orders-delivered
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_PARENT_BUILD_NUMBER}
    img_cnts: orders-delivered
    secrets:
    - source: k8s_stable_ca
      target: k8s_ca
    - source: k8s_stable_user
      target: k8s_user
    - source: k8s_stable_token
      target: k8s_token
    - source: k8s_stable_addr
      target: k8s_addr
    when:
      event: deployment
      environment: stable
  deploy2stable_report:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-report
    img_names: storiqateam/stq-orders-report
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_PARENT_BUILD_NUMBER}
    img_cnts: orders-report
    secrets:
    - source: k8s_stable_ca
      target: k8s_ca
    - source: k8s_stable_user
      target: k8s_user
    - source: k8s_stable_token
      target: k8s_token
    - source: k8s_stable_addr
      target: k8s_addr
    when:
      event: deployment
      environment: stable
  deploy2stable_sent:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-sent
    img_names: storiqateam/stq-orders-sent
    img_tags: ${DRONE_BRANCH//\//_}${DRONE_PARENT_BUILD_NUMBER}
    img_cnts: orders-sent
    secrets:
    - source: k8s_stable_ca
      target: k8s_ca
    - source: k8s_stable_user
      target: k8s_user
    - source: k8s_stable_token
      target: k8s_token
    - source: k8s_stable_addr
      target: k8s_addr
    when:
      event: deployment
      environment: stable
# stage
  deploy2stage_orders:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders
    img_names: storiqateam/stq-orders
    img_cnts: orders
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_stage_ca
      target: k8s_ca
    - source: k8s_stage_user
      target: k8s_user
    - source: k8s_stage_token
      target: k8s_token
    - source: k8s_stage_addr
      target: k8s_addr
    when:
      event: tag
  deploy2stage_delivered:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-delivered
    img_names: storiqateam/stq-orders-delivered
    img_cnts: orders-delivered
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_stage_ca
      target: k8s_ca
    - source: k8s_stage_user
      target: k8s_user
    - source: k8s_stage_token
      target: k8s_token
    - source: k8s_stage_addr
      target: k8s_addr
    when:
      event: tag
  deploy2stage_report:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-report
    img_names: storiqateam/stq-orders-report
    img_cnts: orders-report
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_stage_ca
      target: k8s_ca
    - source: k8s_stage_user
      target: k8s_user
    - source: k8s_stage_token
      target: k8s_token
    - source: k8s_stage_addr
      target: k8s_addr
    when:
      event: tag
  deploy2stage_sent:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-sent
    img_names: storiqateam/stq-orders-sent
    img_cnts: orders-sent
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_stage_ca
      target: k8s_ca
    - source: k8s_stage_user
      target: k8s_user
    - source: k8s_stage_token
      target: k8s_token
    - source: k8s_stage_addr
      target: k8s_addr
    when:
      event: tag
# production
  deploy2production_orders:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders
    img_names: storiqateam/stq-orders
    img_cnts: orders
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_prod_ca
      target: k8s_ca
    - source: k8s_prod_user
      target: k8s_user
    - source: k8s_prod_token
      target: k8s_token
    - source: k8s_prod_addr
      target: k8s_addr
    when:
      event: deployment
      environment: production
  deploy2production_delivered:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-delivered
    img_names: storiqateam/stq-orders-delivered
    img_cnts: orders-delivered
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_prod_ca
      target: k8s_ca
    - source: k8s_prod_user
      target: k8s_user
    - source: k8s_prod_token
      target: k8s_token
    - source: k8s_prod_addr
      target: k8s_addr
    when:
      event: deployment
      environment: production
  deploy2production_report:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-report
    img_names: storiqateam/stq-orders-report
    img_cnts: orders-report
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_prod_ca
      target: k8s_ca
    - source: k8s_prod_user
      target: k8s_user
    - source: k8s_prod_token
      target: k8s_token
    - source: k8s_prod_addr
      target: k8s_addr
    when:
      event: deployment
      environment: production
  deploy2production_sent:
    group: deploy
    image: jackthestripper/drone_setimage
    namespace: default
    kind: deployment
    object: orders-sent
    img_names: storiqateam/stq-orders-sent
    img_cnts: orders-sent
    img_tags: '${DRONE_TAG}'
    secrets:
    - source: k8s_prod_ca
      target: k8s_ca
    - source: k8s_prod_user
      target: k8s_user
    - source: k8s_prod_token
      target: k8s_token
    - source: k8s_prod_addr
      target: k8s_addr
    when:
      event: deployment
      environment: production

###
# Notifications and post deploy ops
###

  rebuild-cache:
    group: package
    image: plugins/s3-cache:1
    pull: true
    secrets: [ aws_access_key_id, aws_secret_access_key ]
    mount: deps
    rebuild: true
    when:
      event: push
      branch: master

###
# Test services
###

services:
  db-postgresql:
    image: postgres:10-alpine
    environment:
    - POSTGRES_PASSWORD=a1a1a1a1
    when:
      event: pull_request

